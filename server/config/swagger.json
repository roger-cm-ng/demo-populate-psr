{
  "swagger": "2.0",
  "title" : "Sugaryart API Documentation",
  "description" : "Sugaryart - all sweet things in life",
  "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "2.0",
    "host": "localhost:3000",
    "basePath": "/api",
    "tags": [
      {
        "name": "Pics",
        "description": "API for Pics Endpoints"
      }
    ],
    "schemes": ["http"],
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "paths" :{
      "/users/signup":{
        "post":{
          "tags": ["Users"],
          "summary": "API Endpoint for create User",
          "description" : "Create new User in database",
          "parameters":[
            {
              "name": "user",
              "description": "User params to regitser new user",
              "in": "body",
              "required": "true",
              "schema" : {
                "$ref" : "#definitions/User"
              }
            }
          ],
          "produces" : ["application/json"],
          "responses":{
            "200":{
              "description" : "New user has Created",
              "schema": {
               "$ref" : "#definitions/SignupRsp"
              }
            }
          }
        }
      },
      "/users/login":{
        "post":{
          "tags": ["Users"],
          "summary": "API Endpoint to login his/her account",
          "description" : "Login user",
          "parameters":[
            {
              "name": "user",
              "description": "User params to login",
              "in": "body",
              "required": "true",
              "schema" : {
                "$ref" : "#definitions/UserLogin"
              }
            }
          ],
          "produces" : ["application/json"],
          "responses":{
            "200":{
              "description" : "New user has loggedIn",
              "schema": {
               "$ref" : "#definitions/UserLoginRsp"
              }
            }
          }
        }
      },
      "/pics":{
       "post":{
         "tags": ["Pics"],
         "summary": "API Endpoint for create Pic",
         "description" : "Create new Pic in database",
         "parameters":[
           {
             "name": "pic",
             "description": "Pic params to create new pic",
             "in": "body",
             "required": "true",
             "schema" : {
               "$ref" : "#definitions/Pic"
             }
           },
           {
              "name": "authorization",
              "description": "Access token to authorize the user",
              "in": "header",
              "type": "string",
              "required": true
            }
         ],
         "produces" : ["application/json"],
         "responses":{
           "200":{
             "description" : "New Pic Created",
             "schema": {
              "$ref" : "#definitions/Pic"
             }
           }
         }
       },
       "get":{
        "tags": ["Pics"],
        "summary": "API Endpoint for find all Pic",
        "description" : "Find all Pics from the database",
        "parameters":[
          {
            "name": "page",
            "type": "integer",
            "description": "Define the page index for the records",
            "in": "query"
          },
          {
            "name": "perPage",
            "type": "integer",
            "description": "Define the limiet for the records i.e 10",
            "in": "query"
          }
        ],
        "produces" : ["application/json"],
        "responses":{
          "200":{
            "description" : "All the pics",
            "schema": {
             "$ref" : "#definitions/Pics"
            }
          }
        }
       }
      },
      "/pics/{id}":{
        "parameters":[
           {
             "name" : "id",
              "in": "path",
              "required": "true",
              "description": "id of the pic",
              "type": "string"

           }
        ],
        "get":{
          "tags": ["Pics"],
          "summary": "API Endpoint to find single Pic",
          "description" : "Find one from the database",
          "produces" : ["application/json"],
          "responses":{
            "200":{
              "description" : "Pic has found",
              "schema": {
               "$ref" : "#definitions/Pic"
              }
            }
          }
        },
        "delete":{
          "tags": ["Pics"],
          "summary": "API Endpoint to delete the Pic",
          "description" : "Delete pic from the database",
          "parameters":[
            {
              "name": "authorization",
              "description": "Access token to authorize the user",
              "in": "header",
              "type": "string",
              "required": true
            }
          ],
          "produces" : ["application/json"],
          "responses":{
            "200":{
              "description" : "Pic has deleted",
              "schema": {
               "$ref" : "#definitions/Pic"
              }
            }
          }
        },
        "put":{
          "tags": ["Pics"],
          "summary": "API Endpoint for update Pic",
          "description" : "Update the existing Pic in database",
          "parameters":[
            {
              "name": "pic",
              "description": "Pic params to update the pic",
              "in": "body",
              "schema" : {
                "$ref" : "#definitions/UpdatePic"
              }
            },
            {
              "name": "authorization",
              "description": "Access token to authorize the user",
              "in": "header",
              "type": "string",
              "required": true
            }
          ],
          "produces" : ["application/json"],
          "responses":{
            "200":{
              "description" : "Pic has Updated",
              "schema": {
               "$ref" : "#definitions/Pic"
              }
            }
          }
        }
      }
    },
    "definitions":{
      "SignupRsp":{
        "properties":{
          "success": {
            "type":"boolean"
        }
       }
     },
      "User":{
        "required": ["firstName","lastName", "email", "password"],
        "properties":{
          "_id": {
            "type" : "string"
          },
          "firstName": {
            "type" : "string"
          },
          "lastName": {
            "type" : "string"
          },
          "email": {
            "type" : "string"
          },
          "password": {
            "type" : "string"
          }
        }
      },
      "UserLogin":{
        "required": ["email", "password"],
        "properties":{
          "email": {
            "type" : "string"
          },
          "password": {
            "type" : "string"
          }
        }
      },
      "UserLoginRsp":{
        "properties":{
          "token": {
            "type" : "string"
          }
        }
      },
      "Pic":{
        "required": ["title","url"],
        "properties":{
          "_id": {
            "type" : "string"
          },
          "title": {
            "type" : "string"
          },
          "url": {
            "type" : "string"
          },
          "blurb": {
            "type" : "string"
          },
          "price": {
            "type" : "number"
          },
          "limit": {
            "type" : "integer",
            "format" :"Int32"
          }
        }
      },
      "UpdatePic":{
        "properties":{
          "title": {
            "type" : "string"
          },
          "url": {
            "type" : "string"
          },
          "blurb": {
            "type" : "string"
          },
          "price": {
            "type" : "number"
          },
          "limit": {
            "type" : "integer",
            "format" :"Int32"
          }
        }
      },
      "Pics":{
        "properties":{
          "docs": {
            "type" : "array",
            "$ref": "#definitions/Pic"
          },
          "total": {
            "type" : "integer"
          },
          "pages": {
            "type" : "integer"
          },
          "limit": {
            "type" : "integer"
          },
          "page":{
            "type": "integer"
          }
        }
      }
    }
}